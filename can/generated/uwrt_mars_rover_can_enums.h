// AUTO-GENERATED FILE. DO NOT MODIFY

#pragma once

namespace HWBRIDGE {

constexpr uint32_t ROVER_CANBUS_FREQUENCY_HZ = 1000000;

typedef double CANSignalValue_t;

typedef struct {
  uint8_t raw[8];
} CANMsgData_t;

enum CANID {
  ARM_SET_CONTROL_MODE     = 0x0,
  ARM_SET_MOTION_DATA      = 0x1,
  ARM_SET_PID_PARAMS       = 0x2,
  ARM_REPORT_FAULTS        = 0x3,
  ARM_REPORT_ACK           = 0x4,
  SCIENCE_SET_CONTROL_MODE = 0x5,
  SCIENCE_REPORT_FAULTS    = 0x6,
  SCIENCE_REPORT_ACK       = 0x7,
  GIMBAL_SET_CONTROL_MODE  = 0x8,
  GIMBAL_REPORT_FAULTS     = 0x9,
  GIMBAL_REPORT_ACK        = 0xA,
  PDB_SET_LED_MATRIX       = 0xB,
  PDB_REPORT_FAULTS        = 0xC,
  PDB_REPORT_ACK           = 0xD,
  COMMON_SWITCH_CAN_BUS    = 0xE,

};

enum CANSIGNAL {
  ARM_ACK,
  ARM_CLAW_CONTROL_MODE,
  ARM_CLAW_CURRENT_SENSOR_STATE,
  ARM_CLAW_ENCODER_STATE,
  ARM_ELBOW_CONTROL_MODE,
  ARM_ELBOW_CURRENT_SENSOR_STATE,
  ARM_ELBOW_ENCODER_STATE,
  ARM_JOINT_ID,
  ARM_LEFT_WRIST_CONTROL_MODE,
  ARM_LEFT_WRIST_CURRENT_SENSOR_STATE,
  ARM_LEFT_WRIST_ENCODER_STATE,
  ARM_PID_DEADZONE,
  ARM_PID_DERIVATIVE_GAIN,
  ARM_PID_INTEGRAL_GAIN,
  ARM_PID_PROPORTIONAL_GAIN,
  ARM_PID_TUNING_MODE,
  ARM_RIGHT_WRIST_CONTROL_MODE,
  ARM_RIGHT_WRIST_CURRENT_SENSOR_STATE,
  ARM_RIGHT_WRIST_ENCODER_STATE,
  ARM_SHOULDER_CONTROL_MODE,
  ARM_SHOULDER_CURRENT_SENSOR_STATE,
  ARM_SHOULDER_ENCODER_STATE,
  ARM_SHOULDER_MOTION_DATA,
  ARM_TURNTABLE_CONTROL_MODE,
  ARM_TURNTABLE_CURRENT_SENSOR_STATE,
  ARM_TURNTABLE_ENCODER_STATE,
  ARM_TURNTABLE_MOTION_DATA,
  COMMON_CAN_BUS_ID,
  GIMBAL_ACK,
  GIMBAL_PAN_CONTROL_MODE,
  GIMBAL_PAN_ENCODER_STATE,
  PDB_17_V_RAIL_STATUS,
  PDB_5_V_RAIL_STATUS,
  PDB_ACK,
  PDB_ARM_POWER_STATUS,
  PDB_GIMBAL_POWER_STATUS,
  PDB_JETSON_STATUS,
  PDB_LED_MATRIX_STATE,
  PDB_SCIENCE_POWER_STATUS,
  PDB_VBAT_RAIL_STATUS,
  SCIENCE_ACK,
  SCIENCE_ELEVATOR_CONTROL_MODE,
  SCIENCE_ELEVATOR_ENCODER_STATE,
  SCIENCE_GENEVA_CONTROL_MODE,
  SCIENCE_GENEVA_ENCODER_STATE,
  SCIENCE_MOISTURE_SENSOR_STATE,

};
}  // namespace HWBRIDGE
