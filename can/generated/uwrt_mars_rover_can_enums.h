// AUTO-GENERATED FILE. DO NOT MODIFY

#pragma once

namespace HWBRIDGE {

constexpr uint32_t ROVER_CANBUS_FREQUENCY_HZ = 1000000;

typedef double CANSignalValue_t;

typedef struct {
  uint8_t raw[8];
} CANMsgData_t;

enum CANID {
  ARM_SET_CONTROL_MODE              = 0x0,
  ARM_SET_JOINT_POSITION            = 0x1,
  ARM_SET_JOINT_ANGULAR_VELOCITY    = 0x2,
  ARM_SET_JOINT_CURRENT             = 0x3,
  ARM_SET_TURNTABLE_PID_PARAMS      = 0x4,
  ARM_SET_SHOULDER_PID_PARAMS       = 0x5,
  ARM_SET_ELBOW_PID_PARAMS          = 0x6,
  ARM_SET_LEFT_WRIST_PID_PARAMS     = 0x7,
  ARM_SET_RIGHT_WRIST_PID_PARAMS    = 0x8,
  ARM_SET_CLAW_PID_PARAMS           = 0x9,
  ARM_REPORT_JOINT_POSITION         = 0xA,
  ARM_REPORT_JOINT_ANGULAR_VELOCITY = 0xB,
  ARM_REPORT_JOINT_CURRENT          = 0xC,
  ARM_REPORT_FAULTS                 = 0xD,
  ARM_REPORT_ACK                    = 0xE,
  SCIENCE_SET_CONTROL_MODE          = 0xF,
  SCIENCE_REPORT_FAULTS             = 0x14,
  SCIENCE_REPORT_ACK                = 0x15,
  GIMBAL_SET_CONTROL_MODE           = 0x16,
  GIMBAL_REPORT_FAULTS              = 0x1A,
  GIMBAL_REPORT_ACK                 = 0x1B,
  PDB_SET_LED_MATRIX                = 0x1C,
  PDB_REPORT_FAULTS                 = 0x1E,
  PDB_REPORT_ACK                    = 0x1F,
  COMMON_SWITCH_CAN_BUS             = 0x20,

};

enum CANSIGNAL {
  ARM_ACK,
  ARM_CLAW_CONTROL_MODE,
  ARM_CLAW_CURRENT_SENSOR_STATE,
  ARM_CLAW_ENCODER_STATE,
  ARM_CLAW_PID_DEADZONE,
  ARM_CLAW_PID_DERIVATIVE_GAIN,
  ARM_CLAW_PID_INTEGRAL_GAIN,
  ARM_CLAW_PID_PROPORTIONAL_GAIN,
  ARM_CLAW_PID_TUNING_MODE,
  ARM_CLAW_SET_POSITION,
  ARM_ELBOW_CONTROL_MODE,
  ARM_ELBOW_CURRENT_SENSOR_STATE,
  ARM_ELBOW_ENCODER_STATE,
  ARM_ELBOW_PID_DEADZONE,
  ARM_ELBOW_PID_DERIVATIVE_GAIN,
  ARM_ELBOW_PID_INTEGRAL_GAIN,
  ARM_ELBOW_PID_PROPORTIONAL_GAIN,
  ARM_ELBOW_PID_TUNING_MODE,
  ARM_ELBOW_SET_POSITION,
  ARM_LEFT_WRIST_CONTROL_MODE,
  ARM_LEFT_WRIST_CURRENT_SENSOR_STATE,
  ARM_LEFT_WRIST_ENCODER_STATE,
  ARM_LEFT_WRIST_PID_DEADZONE,
  ARM_LEFT_WRIST_PID_DERIVATIVE_GAIN,
  ARM_LEFT_WRIST_PID_INTEGRAL_GAIN,
  ARM_LEFT_WRIST_PID_PROPORTIONAL_GAIN,
  ARM_LEFT_WRIST_PID_TUNING_MODE,
  ARM_LEFT_WRIST_SET_POSITION,
  ARM_REPORT_CLAW_ANGULAR_VELOCITY,
  ARM_REPORT_CLAW_CURRENT,
  ARM_REPORT_CLAW_WRIST_POSITION,
  ARM_REPORT_ELBOW_ANGULAR_VELOCITY,
  ARM_REPORT_ELBOW_CURRENT,
  ARM_REPORT_ELBOW_POSITION,
  ARM_REPORT_LEFT_WRIST_ANGULAR_VELOCITY,
  ARM_REPORT_LEFT_WRIST_CURRENT,
  ARM_REPORT_LEFT_WRIST_POSITION,
  ARM_REPORT_RIGHT_WRIST_ANGULAR_VELOCITY,
  ARM_REPORT_RIGHT_WRIST_CURRENT,
  ARM_REPORT_RIGHT_WRIST_POSITION,
  ARM_REPORT_SHOULDER_ANGULAR_VELOCITY,
  ARM_REPORT_SHOULDER_CURRENT,
  ARM_REPORT_SHOULDER_POSITION,
  ARM_REPORT_TURNTABLE_ANGULAR_VELOCITY,
  ARM_REPORT_TURNTABLE_CURRENT,
  ARM_REPORT_TURNTABLE_POSITION,
  ARM_RIGHT_WRIST_CONTROL_MODE,
  ARM_RIGHT_WRIST_CURRENT_SENSOR_STATE,
  ARM_RIGHT_WRIST_ENCODER_STATE,
  ARM_RIGHT_WRIST_PID_DEADZONE,
  ARM_RIGHT_WRIST_PID_DERIVATIVE_GAIN,
  ARM_RIGHT_WRIST_PID_INTEGRAL_GAIN,
  ARM_RIGHT_WRIST_PID_PROPORTIONAL_GAIN,
  ARM_RIGHT_WRIST_PID_TUNING_MODE,
  ARM_RIGHT_WRIST_SET_POSITION,
  ARM_SETCLAW_ANGULAR_VELOCITY,
  ARM_SETCLAW_CURRENT,
  ARM_SETLEFT_WRIST_ANGULAR_VELOCITY,
  ARM_SETLEFT_WRIST_CURRENT,
  ARM_SETRIGHT_WRIST_ANGULAR_VELOCITY,
  ARM_SETRIGHT_WRIST_CURRENT,
  ARM_SET_ELBOW_ANGULAR_VELOCITY,
  ARM_SET_ELBOW_CURRENT,
  ARM_SET_SHOULDER_ANGULAR_VELOCITY,
  ARM_SET_SHOULDER_CURRENT,
  ARM_SET_TURNTABLE_ANGULAR_VELOCITY,
  ARM_SET_TURNTABLE_CURRENT,
  ARM_SHOULDER_CONTROL_MODE,
  ARM_SHOULDER_CURRENT_SENSOR_STATE,
  ARM_SHOULDER_ENCODER_STATE,
  ARM_SHOULDER_PID_DEADZONE,
  ARM_SHOULDER_PID_DERIVATIVE_GAIN,
  ARM_SHOULDER_PID_INTEGRAL_GAIN,
  ARM_SHOULDER_PID_PROPORTIONAL_GAIN,
  ARM_SHOULDER_PID_TUNING_MODE,
  ARM_SHOULDER_SET_POSITION,
  ARM_TOOL_TIP_SET_POSITION,
  ARM_TURNTABLE_CONTROL_MODE,
  ARM_TURNTABLE_CURRENT_SENSOR_STATE,
  ARM_TURNTABLE_ENCODER_STATE,
  ARM_TURNTABLE_PID_DEADZONE,
  ARM_TURNTABLE_PID_DERIVATIVE_GAIN,
  ARM_TURNTABLE_PID_INTEGRAL_GAIN,
  ARM_TURNTABLE_PID_PROPORTIONAL_GAIN,
  ARM_TURNTABLE_PID_TUNING_MODE,
  ARM_TURNTABLE_SET_POSITION,
  COMMON_CAN_BUS_ID,
  GIMBAL_ACK,
  GIMBAL_PAN_CONTROL_MODE,
  GIMBAL_PAN_ENCODER_STATE,
  PDB_17_V_RAIL_STATUS,
  PDB_5_V_RAIL_STATUS,
  PDB_ACK,
  PDB_ARM_POWER_STATUS,
  PDB_GIMBAL_POWER_STATUS,
  PDB_JETSON_STATUS,
  PDB_LED_MATRIX_STATE,
  PDB_SCIENCE_POWER_STATUS,
  PDB_VBAT_RAIL_STATUS,
  SCIENCE_ACK,
  SCIENCE_ELEVATOR_CONTROL_MODE,
  SCIENCE_ELEVATOR_ENCODER_STATE,
  SCIENCE_GENEVA_CONTROL_MODE,
  SCIENCE_GENEVA_ENCODER_STATE,
  SCIENCE_MOISTURE_SENSOR_STATE,

};
}  // namespace HWBRIDGE
